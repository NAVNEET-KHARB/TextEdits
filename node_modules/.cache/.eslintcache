[{"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\index.js":"1","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\App.js":"2","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\reportWebVitals.js":"3","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\Navbar.js":"4","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\About.js":"5","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\TextForm.js":"6","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\Alert.js":"7"},{"size":535,"mtime":1693088877649,"results":"8","hashOfConfig":"9"},{"size":3214,"mtime":1695125143138,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1693088880956,"results":"11","hashOfConfig":"9"},{"size":5562,"mtime":1695125129181,"results":"12","hashOfConfig":"9"},{"size":5195,"mtime":1694990154413,"results":"13","hashOfConfig":"9"},{"size":4664,"mtime":1695039165743,"results":"14","hashOfConfig":"9"},{"size":478,"mtime":1695027312441,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ka0crk",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\index.js",[],[],"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\App.js",[],[],"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\reportWebVitals.js",[],[],"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\Navbar.js",["38","39","40"],[],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  let textcolor = \"text-body-emphasis\";\r\n  let radTxt = \"LIGHT\";\r\n  let navColor = \"light\";\r\n  if (props.mode === \"light\" && props.sitecolor === null) {\r\n    navColor = \"light\";\r\n    textcolor = \"text-body-emphasis\";\r\n    radTxt = \"DARK\";\r\n  } else if (props.mode === \"light\" && props.sitecolor === \"white\") {\r\n    navColor = \"light\";\r\n    textcolor = \"text-body-emphasis\";\r\n    radTxt = \"DARK\";\r\n  } else if (props.mode === \"light\" && props.sitecolor === \"red\") {\r\n    navColor = \"danger\";\r\n    textcolor = \"text-body-emphasis\";\r\n    radTxt = \"DARK\";\r\n  } else if (props.mode === \"light\" && props.sitecolor === \"blue\") {\r\n    navColor = \"primary\";\r\n    textcolor = \"text-body-emphasis\";\r\n    radTxt = \"DARK\";\r\n  } else if (props.mode === \"light\" && props.sitecolor === \"green\") {\r\n    navColor = \"success\";\r\n    textcolor = \"text-body-emphasis\";\r\n    radTxt = \"DARK\";\r\n  } else if (props.mode === \"dark\" && props.sitecolor === null) {\r\n    navColor = \"dark\";\r\n    textcolor = \"text-white\";\r\n    radTxt = \"LIGHT\";\r\n    document.body.style.backgroundColor = \"#2F2F2F\";\r\n  } else {\r\n    navColor = \"dark\";\r\n    textcolor = \"text-white\";\r\n    radTxt = \"LIGHT\";\r\n  }\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg bg-${navColor}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className={`navbar-brand ${textcolor}`} href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  className={`nav-link active ${textcolor}`}\r\n                  aria-current=\"page\"\r\n                  href=\"#\"\r\n                >\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className={`nav-link ${textcolor}`} href=\"#\">\r\n                  {props.about}\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"d-flex\">\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input mx-1\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault1\"\r\n                  onClick={props.toggleSiteColorw}\r\n                />\r\n                <label\r\n                  className={`form-check-label ${textcolor}`}\r\n                  htmlFor=\"flexRadioDefault1\"\r\n                >\r\n                  White\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input mx-1\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault2\"\r\n                  onClick={props.toggleSiteColorr}\r\n                />\r\n                <label\r\n                  className={`form-check-label ${textcolor}`}\r\n                  htmlFor=\"flexRadioDefault2\"\r\n                >\r\n                  Red\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input mx-1\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault3\"\r\n                  onClick={props.toggleSiteColorb}\r\n                />\r\n                <label\r\n                  className={`form-check-label ${textcolor}`}\r\n                  htmlFor=\"flexRadioDefault3\"\r\n                >\r\n                  Blue\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input mx-1\"\r\n                  type=\"radio\"\r\n                  name=\"flexRadioDefault\"\r\n                  id=\"flexRadioDefault4\"\r\n                  onClick={props.toggleSiteColorg}\r\n                />\r\n                <label\r\n                  className={`form-check-label ${textcolor}`}\r\n                  htmlFor=\"flexRadioDefault4\"\r\n                >\r\n                  Green\r\n                </label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-check form-switch\">\r\n              <input\r\n                onClick={props.toggleMode}\r\n                className=\"form-check-input mx-1\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label\r\n                className={`form-check-label ${textcolor}`}\r\n                htmlFor=\"flexSwitchCheckDefault\"\r\n              >\r\n                Enable {radTxt} MODE\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  about: \"Set about text here\",\r\n};\r\n","C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\About.js",[],[],"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\TextForm.js",[],[],"C:\\Users\\Satvik\\Desktop\\TextEdits\\src\\components\\Alert.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":43,"column":11,"nodeType":"43","endLine":43,"endColumn":63},{"ruleId":"41","severity":1,"message":"42","line":60,"column":17,"nodeType":"43","endLine":64,"endColumn":18},{"ruleId":"41","severity":1,"message":"42","line":69,"column":17,"nodeType":"43","endLine":69,"endColumn":65},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]